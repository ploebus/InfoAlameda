<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
// Copyright (c) 2010 ESRI
//
// All rights reserved under the copyright laws of the United States.
// You may freely redistribute and use this software, with or
// without modification, provided you include the original copyright
// and use restrictions.  See use restrictions in the file:
// <install location>/License.txt
//
////////////////////////////////////////////////////////////////////////////////
-->
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*"
				   creationComplete="init()"
				   implements="com.esri.viewer.IInfowindowTemplate, com.esri.ags.components.supportClasses.IGraphicRenderer">
	
	<fx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.viewer.IInfowindowTemplate;
			
			import mx.events.FlexEvent;
			
			private var _graphic:Graphic;
			private var _layer:GraphicsLayer;
			private var _data:Object;
			
			//private var _infoData:Object;
			//set info parameters
			[Bindable]
			private var _content:String = "";
			
			[Bindable]
			private var _title:String = "";
			
			private var _infoClass:Class;
			
			public function set infoClass(value:Class):void
			{
				_infoClass = value;
			}
			
			public function get infoClass():Class
			{
				return _infoClass;
			}
			
			private function init():void
			{
				this.addEventListener(FlexEvent.DATA_CHANGE, setInfoParameters);
				infoClass = infoPopup;
				setInfoParameters(null);
			}
			
			public function set graphic(value:Graphic):void
			{
				_graphic = value;
				_layer = _graphic.graphicsLayer;
			}
			
			public function set infoConfig(value:XML):void
			{
				
			}
			
			private function setInfoParameters(event:FlexEvent):void
			{
				if (data == null)
				{
					return;
				}
				
				_title = data.title || "";
				_content = data.content;
				
				if (_content)
				{
					infoContent.visible = true;
				}
				
				//clear picture and link button
				infoImage.source = "";
				infoImage.visible = false;
				infoImage.includeInLayout = false;
				infoLink.visible = false;
				infoLink.includeInLayout = false;
				
				if (data.link)
				{
					var link:String = data.link as String;
					var pos:Number = link.length - 4;
					var sfx:String = link.substr(pos, 4).toLowerCase();
					if ((sfx == ".jpg") || (sfx == ".png") || (sfx == ".gif"))
					{
						infoImage.source = link;
						infoImage.visible = true;
						infoImage.includeInLayout = true;
					}
					else
					{
						infoLink.text = link;
						infoLink.visible = true;
						infoLink.includeInLayout = true;
					}
				}
			}
			
			//show link
			private function showLink():void
			{
				navigateToURL(new URLRequest(data.link));
			}
		]]>
	</fx:Script>
	
	<s:Group id="infoCanvas"
			 width="210"
			 minHeight="30">
		<s:layout>
			<s:VerticalLayout gap="0"
							  horizontalAlign="left"
							  paddingBottom="4"
							  paddingLeft="4"
							  paddingRight="4"
							  paddingTop="4"
							  verticalAlign="middle"/>
		</s:layout>
		<s:BorderContainer width="208" minHeight="30" dropShadowVisible="true" cornerRadius="5">
			<s:RichEditableText id="infoTitle"
								width="100%"
								editable="false"
								text="{_title}"
								visible="false"
							 	color="#333333"/>
			<s:RichEditableText id="infoContent"
								width="100%"
								editable="false"
								text="{_content}"
								visible="false"
								color="#333333" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"/>
			<mx:Image id="infoImage"
					  height="150"
					  buttonMode="true"
					  click="showLink()"
					  includeInLayout="false"
					  maxWidth="{infoCanvas.width - 10}"
					  useHandCursor="true"
					  visible="false"/>
			<s:Label id="infoLink"
					 width="100%"
					 click="showLink()"
					 includeInLayout="false"
					 maxDisplayedLines="1"
					 color="#ff0000"
					 showTruncationTip="true"
					 textDecoration="underline"
					 visible="false"/>
		</s:BorderContainer>
	</s:Group>
	
</viewer:BaseWidget>
